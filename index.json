{
  "api/BT.BehaviorTreeRunner.html": {
    "href": "api/BT.BehaviorTreeRunner.html",
    "title": "Class BehaviorTreeRunner | Developer Reference",
    "keywords": "Class BehaviorTreeRunner Behavior Tree를 실행시키는 Component. Inheritance Object BehaviorTreeRunner Namespace : BT Assembly : cs.temp.dll.dll Syntax [Serializable] public class BehaviorTreeRunner : MonoBehaviour Fields BehaviorTree Declaration public BehaviorTreeSO BehaviorTree Field Value Type Description BehaviorTreeSO BlackboardOverrides Declaration public List<BlackboardKeyValuePair> BlackboardOverrides Field Value Type Description List < BlackboardKeyValuePair > Validate Declaration public bool Validate Field Value Type Description Boolean"
  },
  "api/BT.Core.Actions.ActionNode.html": {
    "href": "api/BT.Core.Actions.ActionNode.html",
    "title": "Class ActionNode | Developer Reference",
    "keywords": "Class ActionNode Action노드는 자식을 가질 수 없으며, 노드 이름과 같이 액션을 실행함. Inheritance Object BehaviorNode ActionNode LogNode SubTree WaitNode Inherited Members BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Awake() BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Run() BehaviorNode.Abort() BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.OnRun() BehaviorNode.OnInitialize() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Actions Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class ActionNode : BehaviorNode"
  },
  "api/BT.Core.Actions.html": {
    "href": "api/BT.Core.Actions.html",
    "title": "Namespace BT.Core.Actions | Developer Reference",
    "keywords": "Namespace BT.Core.Actions Classes ActionNode Action노드는 자식을 가질 수 없으며, 노드 이름과 같이 액션을 실행함. LogNode 로그를 출력하는 ActionNode . SubTree WaitNode 지정한 시간동안 대기하는 ActionNode ."
  },
  "api/BT.Core.Actions.LogNode.html": {
    "href": "api/BT.Core.Actions.LogNode.html",
    "title": "Class LogNode | Developer Reference",
    "keywords": "Class LogNode 로그를 출력하는 ActionNode . Inheritance Object BehaviorNode ActionNode LogNode Inherited Members BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Awake() BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Run() BehaviorNode.Abort() BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.OnInitialize() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Actions Assembly : cs.temp.dll.dll Syntax [Serializable] public class LogNode : ActionNode Methods OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Actions.SubTree.html": {
    "href": "api/BT.Core.Actions.SubTree.html",
    "title": "Class SubTree | Developer Reference",
    "keywords": "Class SubTree Inheritance Object BehaviorNode ActionNode SubTree Inherited Members BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Awake() BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Run() BehaviorNode.Abort() BehaviorNode.OnExit() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Actions Assembly : cs.temp.dll.dll Syntax [Serializable] public class SubTree : ActionNode Fields TreeAsset Declaration public BehaviorTreeSO TreeAsset Field Value Type Description BehaviorTreeSO TreeInstance Declaration public BehaviorTreeSO TreeInstance Field Value Type Description BehaviorTreeSO Methods OnEnter() Declaration protected override void OnEnter() Overrides BehaviorNode.OnEnter() OnInitialize() Declaration protected override void OnInitialize() Overrides BehaviorNode.OnInitialize() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Actions.WaitNode.html": {
    "href": "api/BT.Core.Actions.WaitNode.html",
    "title": "Class WaitNode | Developer Reference",
    "keywords": "Class WaitNode 지정한 시간동안 대기하는 ActionNode . Inheritance Object BehaviorNode ActionNode WaitNode Inherited Members BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Run() BehaviorNode.OnExit() BehaviorNode.OnInitialize() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Actions Assembly : cs.temp.dll.dll Syntax [Serializable] public class WaitNode : ActionNode Methods Abort() Declaration public override void Abort() Overrides BehaviorNode.Abort() Awake() Declaration protected override void Awake() Overrides BehaviorNode.Awake() OnEnter() Declaration protected override void OnEnter() Overrides BehaviorNode.OnEnter() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.BehaviorNode.html": {
    "href": "api/BT.Core.BehaviorNode.html",
    "title": "Class BehaviorNode | Developer Reference",
    "keywords": "Class BehaviorNode 모든 BehaviorNode의 Base class. Inheritance Object BehaviorNode ActionNode CompositeNode ConditionalNode DecoratorNode RootNode Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class BehaviorNode Fields _runner Declaration protected BehaviorTreeRunner _runner Field Value Type Description BehaviorTreeRunner Blackboard Declaration public Blackboard Blackboard Field Value Type Description Blackboard Description Declaration public string Description Field Value Type Description String Guid Declaration public string Guid Field Value Type Description String Position Declaration public Vector2 Position Field Value Type Description Vector2 Properties State Declaration public BehaviorNodeState State { get; } Property Value Type Description BehaviorNodeState Methods Abort() Declaration public virtual void Abort() Awake() Declaration protected virtual void Awake() Initialize(BehaviorTreeRunner) Declaration public virtual void Initialize(BehaviorTreeRunner runner) Parameters Type Name Description BehaviorTreeRunner runner IsRunnable() Declaration public virtual bool IsRunnable() Returns Type Description Boolean OnEnter() 노드가 처음 실행되었을 때, 호출함. Declaration protected virtual void OnEnter() OnExit() Declaration protected virtual void OnExit() OnInitialize() Declaration protected virtual void OnInitialize() OnRun() 노드를 실행시켰을 때, 발생하는 Callback함수. Declaration protected abstract BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Reset() Declaration public void Reset() Run() Declaration public virtual BehaviorNodeState Run() Returns Type Description BehaviorNodeState"
  },
  "api/BT.Core.BehaviorNodeState.html": {
    "href": "api/BT.Core.BehaviorNodeState.html",
    "title": "Enum BehaviorNodeState | Developer Reference",
    "keywords": "Enum BehaviorNodeState 노드의 상태를 표시해주는 Enum. Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax public enum BehaviorNodeState Fields Name Description Failure Running Success"
  },
  "api/BT.Core.BehaviorTreeSO.html": {
    "href": "api/BT.Core.BehaviorTreeSO.html",
    "title": "Class BehaviorTreeSO | Developer Reference",
    "keywords": "Class BehaviorTreeSO BehaviorTreeSO 와 BehaviorNode 들을 관리하는 ScriptableObject. Inheritance Object BehaviorTreeSO Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax public sealed class BehaviorTreeSO : ScriptableObject Constructors BehaviorTreeSO() Declaration public BehaviorTreeSO() Fields Blackboard Declaration public Blackboard Blackboard Field Value Type Description Blackboard Nodes Declaration public List<BehaviorNode> Nodes Field Value Type Description List < BehaviorNode > RootNode Declaration public BehaviorNode RootNode Field Value Type Description BehaviorNode TreeState Declaration public BehaviorNodeState TreeState Field Value Type Description BehaviorNodeState ViewPosition Declaration public Vector3 ViewPosition Field Value Type Description Vector3 ViewScale Declaration public Vector3 ViewScale Field Value Type Description Vector3 Methods Bind(BehaviorTreeRunner) Declaration public void Bind(BehaviorTreeRunner runner) Parameters Type Name Description BehaviorTreeRunner runner Clone() Declaration public BehaviorTreeSO Clone() Returns Type Description BehaviorTreeSO GetChildren(BehaviorNode) Declaration public static List<BehaviorNode> GetChildren(BehaviorNode parent) Parameters Type Name Description BehaviorNode parent Returns Type Description List < BehaviorNode > Traverse(BehaviorNode, Action<BehaviorNode>) 모든 자식노드를 선회함. Declaration public static void Traverse(BehaviorNode node, Action<BehaviorNode> visiter) Parameters Type Name Description BehaviorNode node 부모노드 Action < BehaviorNode > visiter 방문한 노드에서 발생할 이벤트 Update() Declaration public BehaviorNodeState Update() Returns Type Description BehaviorNodeState"
  },
  "api/BT.Core.Blackboard.html": {
    "href": "api/BT.Core.Blackboard.html",
    "title": "Class Blackboard | Developer Reference",
    "keywords": "Class Blackboard BehaviorTree에서 사용할 Blackboard Inheritance Object Blackboard Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class Blackboard Fields Keys Declaration public List<BlackboardKey> Keys Field Value Type Description List < BlackboardKey > Methods Find(String) Declaration public BlackboardKey Find(string keyName) Parameters Type Name Description String keyName Returns Type Description BlackboardKey Find<T>(String) Declaration public BlackboardKey<T> Find<T>(string keyName) Parameters Type Name Description String keyName Returns Type Description BlackboardKey <T> Type Parameters Name Description T GetValue<T>(String) Declaration public T GetValue<T>(string keyName) Parameters Type Name Description String keyName Returns Type Description T Type Parameters Name Description T SetValue<T>(String, T) Declaration public void SetValue<T>(string keyName, T value) Parameters Type Name Description String keyName T value Type Parameters Name Description T"
  },
  "api/BT.Core.BlackboardKey.html": {
    "href": "api/BT.Core.BlackboardKey.html",
    "title": "Class BlackboardKey | Developer Reference",
    "keywords": "Class BlackboardKey Inheritance Object BlackboardKey BlackboardKey<T> Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class BlackboardKey : ISerializationCallbackReceiver Constructors BlackboardKey(Type) Declaration public BlackboardKey(Type underlyingType) Parameters Type Name Description Type underlyingType Fields Name Declaration public string Name Field Value Type Description String TypeName Declaration public string TypeName Field Value Type Description String UnderlyingType Declaration public Type UnderlyingType Field Value Type Description Type Methods CopyFrom(BlackboardKey) Declaration public abstract void CopyFrom(BlackboardKey key) Parameters Type Name Description BlackboardKey key CreateKey(Type) Declaration public static BlackboardKey CreateKey(Type type) Parameters Type Name Description Type type Returns Type Description BlackboardKey Equals(BlackboardKey) Declaration public abstract bool Equals(BlackboardKey key) Parameters Type Name Description BlackboardKey key Returns Type Description Boolean OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize()"
  },
  "api/BT.Core.BlackboardKey-1.html": {
    "href": "api/BT.Core.BlackboardKey-1.html",
    "title": "Class BlackboardKey<T> | Developer Reference",
    "keywords": "Class BlackboardKey<T> Inheritance Object BlackboardKey BlackboardKey<T> BooleanKey BoundsIntKey BoundsKey ColliderKey ColorKey CurveKey DoubleKey FloatKey GameObjectKey GradientKey IntKey LayerKey LayerMaskKey MaterialKey RigidBodyKey StringKey TagKey TransformKey Vector2IntKey Vector2Key Vector3IntKey Vector3Key Vector4Key Inherited Members BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax public abstract class BlackboardKey<T> : BlackboardKey Type Parameters Name Description T Constructors BlackboardKey() Declaration public BlackboardKey() Fields Value Declaration public T Value Field Value Type Description T Methods CopyFrom(BlackboardKey) Declaration public override void CopyFrom(BlackboardKey key) Parameters Type Name Description BlackboardKey key Overrides BlackboardKey.CopyFrom(BlackboardKey) Equals(BlackboardKey) Declaration public override bool Equals(BlackboardKey key) Parameters Type Name Description BlackboardKey key Returns Type Description Boolean Overrides BlackboardKey.Equals(BlackboardKey) ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/BT.Core.BlackboardKeyValuePair.html": {
    "href": "api/BT.Core.BlackboardKeyValuePair.html",
    "title": "Class BlackboardKeyValuePair | Developer Reference",
    "keywords": "Class BlackboardKeyValuePair Inheritance Object BlackboardKeyValuePair Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax public class BlackboardKeyValuePair Fields Key Declaration public BlackboardKey Key Field Value Type Description BlackboardKey Value Declaration public BlackboardKey Value Field Value Type Description BlackboardKey Methods WriteValue() Declaration public void WriteValue()"
  },
  "api/BT.Core.BooleanKey.html": {
    "href": "api/BT.Core.BooleanKey.html",
    "title": "Class BooleanKey | Developer Reference",
    "keywords": "Class BooleanKey Inheritance Object BlackboardKey BlackboardKey < Boolean > BooleanKey Inherited Members BlackboardKey<Boolean>.Value BlackboardKey<Boolean>.ToString() BlackboardKey<Boolean>.CopyFrom(BlackboardKey) BlackboardKey<Boolean>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class BooleanKey : BlackboardKey<bool>"
  },
  "api/BT.Core.BoundsIntKey.html": {
    "href": "api/BT.Core.BoundsIntKey.html",
    "title": "Class BoundsIntKey | Developer Reference",
    "keywords": "Class BoundsIntKey Inheritance Object BlackboardKey BlackboardKey < BoundsInt > BoundsIntKey Inherited Members BlackboardKey<BoundsInt>.Value BlackboardKey<BoundsInt>.ToString() BlackboardKey<BoundsInt>.CopyFrom(BlackboardKey) BlackboardKey<BoundsInt>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class BoundsIntKey : BlackboardKey<BoundsInt>"
  },
  "api/BT.Core.BoundsKey.html": {
    "href": "api/BT.Core.BoundsKey.html",
    "title": "Class BoundsKey | Developer Reference",
    "keywords": "Class BoundsKey Inheritance Object BlackboardKey BlackboardKey < Bounds > BoundsKey Inherited Members BlackboardKey<Bounds>.Value BlackboardKey<Bounds>.ToString() BlackboardKey<Bounds>.CopyFrom(BlackboardKey) BlackboardKey<Bounds>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class BoundsKey : BlackboardKey<Bounds>"
  },
  "api/BT.Core.ColliderKey.html": {
    "href": "api/BT.Core.ColliderKey.html",
    "title": "Class ColliderKey | Developer Reference",
    "keywords": "Class ColliderKey Inheritance Object BlackboardKey BlackboardKey < Collider > ColliderKey Inherited Members BlackboardKey<Collider>.Value BlackboardKey<Collider>.ToString() BlackboardKey<Collider>.CopyFrom(BlackboardKey) BlackboardKey<Collider>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class ColliderKey : BlackboardKey<Collider>"
  },
  "api/BT.Core.ColorKey.html": {
    "href": "api/BT.Core.ColorKey.html",
    "title": "Class ColorKey | Developer Reference",
    "keywords": "Class ColorKey Inheritance Object BlackboardKey BlackboardKey < Color > ColorKey Inherited Members BlackboardKey<Color>.Value BlackboardKey<Color>.ToString() BlackboardKey<Color>.CopyFrom(BlackboardKey) BlackboardKey<Color>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class ColorKey : BlackboardKey<Color>"
  },
  "api/BT.Core.Composites.AllNode.html": {
    "href": "api/BT.Core.Composites.AllNode.html",
    "title": "Class AllNode | Developer Reference",
    "keywords": "Class AllNode 모든 자식 노드들을 실행 시키는 CompositeNode . 만약 하나의 자식 노드라도 Failure 를 반환한다면, Failure 모든 자식노드가 Success 라면 Success 하나의 자식노드라도 Running 이라면 Running Inheritance Object BehaviorNode CompositeNode AllNode Inherited Members CompositeNode.Children CompositeNode.OnInitialize() CompositeNode.Run() BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Composites Assembly : cs.temp.dll.dll Syntax [Serializable] public class AllNode : CompositeNode Methods Abort() Declaration public override void Abort() Overrides BehaviorNode.Abort() Awake() Declaration protected override void Awake() Overrides BehaviorNode.Awake() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Composites.CompositeNode.html": {
    "href": "api/BT.Core.Composites.CompositeNode.html",
    "title": "Class CompositeNode | Developer Reference",
    "keywords": "Class CompositeNode 자식노드들을 실행시킬 방식을 가지고 있는 노드. Inheritance Object BehaviorNode CompositeNode AllNode ParallelNode RandomSelectorNode SelectorNode SequenceNode UntilSuccess Inherited Members BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Awake() BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Abort() BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.OnRun() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Composites Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class CompositeNode : BehaviorNode Fields Children Declaration public List<BehaviorNode> Children Field Value Type Description List < BehaviorNode > Methods OnInitialize() Declaration protected override void OnInitialize() Overrides BehaviorNode.OnInitialize() Run() Declaration public override BehaviorNodeState Run() Returns Type Description BehaviorNodeState Overrides BehaviorNode.Run()"
  },
  "api/BT.Core.Composites.html": {
    "href": "api/BT.Core.Composites.html",
    "title": "Namespace BT.Core.Composites | Developer Reference",
    "keywords": "Namespace BT.Core.Composites Classes AllNode 모든 자식 노드들을 실행 시키는 CompositeNode . 만약 하나의 자식 노드라도 Failure 를 반환한다면, Failure 모든 자식노드가 Success 라면 Success 하나의 자식노드라도 Running 이라면 Running CompositeNode 자식노드들을 실행시킬 방식을 가지고 있는 노드. ParallelNode RandomSelectorNode 자식 노드들 중에서 하나를 램덤으로 선택해서 실행시키는 CompositeNode . SelectorNode 자식노드들을 왼쪽부터 실행시키며, 그 중에 먼저 실행 가능한 자식노드를 발견한다면 그 자식노드를 실행시는 CompositeNode . SequenceNode 자식노드들을 왼쪽부터 실행시키는 CompositeNode 만약 실행시킨 자식노드가 Failure를 반환한다면, Failure . 모든 자식노드가 정상적으로 실행되었다면, Success . 자식노드 중 하나라도 실행중이라면, Running . UntilSuccess"
  },
  "api/BT.Core.Composites.ParallelNode.html": {
    "href": "api/BT.Core.Composites.ParallelNode.html",
    "title": "Class ParallelNode | Developer Reference",
    "keywords": "Class ParallelNode Inheritance Object BehaviorNode CompositeNode ParallelNode Inherited Members CompositeNode.Children CompositeNode.OnInitialize() CompositeNode.Run() BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Awake() BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Abort() BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Composites Assembly : cs.temp.dll.dll Syntax [Serializable] public class ParallelNode : CompositeNode Methods OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Composites.RandomSelectorNode.html": {
    "href": "api/BT.Core.Composites.RandomSelectorNode.html",
    "title": "Class RandomSelectorNode | Developer Reference",
    "keywords": "Class RandomSelectorNode 자식 노드들 중에서 하나를 램덤으로 선택해서 실행시키는 CompositeNode . Inheritance Object BehaviorNode CompositeNode RandomSelectorNode Inherited Members CompositeNode.Children CompositeNode.OnInitialize() CompositeNode.Run() BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.OnExit() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Composites Assembly : cs.temp.dll.dll Syntax [Serializable] public class RandomSelectorNode : CompositeNode Methods Abort() Declaration public override void Abort() Overrides BehaviorNode.Abort() Awake() Declaration protected override void Awake() Overrides BehaviorNode.Awake() OnEnter() Declaration protected override void OnEnter() Overrides BehaviorNode.OnEnter() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Composites.SelectorNode.html": {
    "href": "api/BT.Core.Composites.SelectorNode.html",
    "title": "Class SelectorNode | Developer Reference",
    "keywords": "Class SelectorNode 자식노드들을 왼쪽부터 실행시키며, 그 중에 먼저 실행 가능한 자식노드를 발견한다면 그 자식노드를 실행시는 CompositeNode . Inheritance Object BehaviorNode CompositeNode SelectorNode Inherited Members CompositeNode.Children CompositeNode.OnInitialize() CompositeNode.Run() BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.OnExit() BehaviorNode.Reset() Namespace : BT.Core.Composites Assembly : cs.temp.dll.dll Syntax [Serializable] public class SelectorNode : CompositeNode Methods Abort() Declaration public override void Abort() Overrides BehaviorNode.Abort() Awake() Declaration protected override void Awake() Overrides BehaviorNode.Awake() IsRunnable() Declaration public override bool IsRunnable() Returns Type Description Boolean Overrides BehaviorNode.IsRunnable() OnEnter() Declaration protected override void OnEnter() Overrides BehaviorNode.OnEnter() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Composites.SequenceNode.html": {
    "href": "api/BT.Core.Composites.SequenceNode.html",
    "title": "Class SequenceNode | Developer Reference",
    "keywords": "Class SequenceNode 자식노드들을 왼쪽부터 실행시키는 CompositeNode 만약 실행시킨 자식노드가 Failure를 반환한다면, Failure . 모든 자식노드가 정상적으로 실행되었다면, Success . 자식노드 중 하나라도 실행중이라면, Running . Inheritance Object BehaviorNode CompositeNode SequenceNode Inherited Members CompositeNode.Children CompositeNode.OnInitialize() CompositeNode.Run() BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.OnExit() BehaviorNode.Reset() Namespace : BT.Core.Composites Assembly : cs.temp.dll.dll Syntax [Serializable] public class SequenceNode : CompositeNode Methods Abort() Declaration public override void Abort() Overrides BehaviorNode.Abort() Awake() Declaration protected override void Awake() Overrides BehaviorNode.Awake() IsRunnable() Declaration public override bool IsRunnable() Returns Type Description Boolean Overrides BehaviorNode.IsRunnable() OnEnter() Declaration protected override void OnEnter() Overrides BehaviorNode.OnEnter() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Composites.UntilSuccess.html": {
    "href": "api/BT.Core.Composites.UntilSuccess.html",
    "title": "Class UntilSuccess | Developer Reference",
    "keywords": "Class UntilSuccess Inheritance Object BehaviorNode CompositeNode UntilSuccess Inherited Members CompositeNode.Children CompositeNode.OnInitialize() CompositeNode.Run() BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Awake() BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Abort() BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Composites Assembly : cs.temp.dll.dll Syntax [Serializable] public class UntilSuccess : CompositeNode Methods OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Conditionals.ConditionalNode.html": {
    "href": "api/BT.Core.Conditionals.ConditionalNode.html",
    "title": "Class ConditionalNode | Developer Reference",
    "keywords": "Class ConditionalNode 조건을 표시해주는 노드 만약 조건에 만족한다면, Success . 만약 조건에 불만족한다면, Failure . Inheritance Object BehaviorNode ConditionalNode Inherited Members BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Awake() BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Run() BehaviorNode.Abort() BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.OnInitialize() BehaviorNode.Reset() Namespace : BT.Core.Conditionals Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class ConditionalNode : BehaviorNode Methods Condition() Declaration protected abstract bool Condition() Returns Type Description Boolean IsRunnable() Declaration public override bool IsRunnable() Returns Type Description Boolean Overrides BehaviorNode.IsRunnable() OnRun() Declaration protected sealed override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.Conditionals.html": {
    "href": "api/BT.Core.Conditionals.html",
    "title": "Namespace BT.Core.Conditionals | Developer Reference",
    "keywords": "Namespace BT.Core.Conditionals Classes ConditionalNode 조건을 표시해주는 노드 만약 조건에 만족한다면, Success . 만약 조건에 불만족한다면, Failure ."
  },
  "api/BT.Core.CurveKey.html": {
    "href": "api/BT.Core.CurveKey.html",
    "title": "Class CurveKey | Developer Reference",
    "keywords": "Class CurveKey Inheritance Object BlackboardKey BlackboardKey < AnimationCurve > CurveKey Inherited Members BlackboardKey<AnimationCurve>.Value BlackboardKey<AnimationCurve>.ToString() BlackboardKey<AnimationCurve>.CopyFrom(BlackboardKey) BlackboardKey<AnimationCurve>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class CurveKey : BlackboardKey<AnimationCurve>"
  },
  "api/BT.Core.Decorators.DecoratorNode.html": {
    "href": "api/BT.Core.Decorators.DecoratorNode.html",
    "title": "Class DecoratorNode | Developer Reference",
    "keywords": "Class DecoratorNode 자식노드를 수정(꾸며주는)하는 노드. Inheritance Object BehaviorNode DecoratorNode RepeatNode Inherited Members BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Awake() BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Abort() BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.OnRun() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Decorators Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class DecoratorNode : BehaviorNode Fields Child Declaration public BehaviorNode Child Field Value Type Description BehaviorNode Methods OnInitialize() Declaration protected override void OnInitialize() Overrides BehaviorNode.OnInitialize() Run() Declaration public override BehaviorNodeState Run() Returns Type Description BehaviorNodeState Overrides BehaviorNode.Run()"
  },
  "api/BT.Core.Decorators.html": {
    "href": "api/BT.Core.Decorators.html",
    "title": "Namespace BT.Core.Decorators | Developer Reference",
    "keywords": "Namespace BT.Core.Decorators Classes DecoratorNode 자식노드를 수정(꾸며주는)하는 노드. RepeatNode 자식노드를 계속해서 결과와 상관없이 반복시키는 DecoratorNode ."
  },
  "api/BT.Core.Decorators.RepeatNode.html": {
    "href": "api/BT.Core.Decorators.RepeatNode.html",
    "title": "Class RepeatNode | Developer Reference",
    "keywords": "Class RepeatNode 자식노드를 계속해서 결과와 상관없이 반복시키는 DecoratorNode . Inheritance Object BehaviorNode DecoratorNode RepeatNode Inherited Members DecoratorNode.Child DecoratorNode.OnInitialize() DecoratorNode.Run() BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Abort() BehaviorNode.OnExit() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core.Decorators Assembly : cs.temp.dll.dll Syntax [Serializable] public class RepeatNode : DecoratorNode Methods Awake() Declaration protected override void Awake() Overrides BehaviorNode.Awake() OnEnter() Declaration protected override void OnEnter() Overrides BehaviorNode.OnEnter() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.DoubleKey.html": {
    "href": "api/BT.Core.DoubleKey.html",
    "title": "Class DoubleKey | Developer Reference",
    "keywords": "Class DoubleKey Inheritance Object BlackboardKey BlackboardKey < Double > DoubleKey Inherited Members BlackboardKey<Double>.Value BlackboardKey<Double>.ToString() BlackboardKey<Double>.CopyFrom(BlackboardKey) BlackboardKey<Double>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class DoubleKey : BlackboardKey<double>"
  },
  "api/BT.Core.FloatKey.html": {
    "href": "api/BT.Core.FloatKey.html",
    "title": "Class FloatKey | Developer Reference",
    "keywords": "Class FloatKey Inheritance Object BlackboardKey BlackboardKey < Single > FloatKey Inherited Members BlackboardKey<Single>.Value BlackboardKey<Single>.ToString() BlackboardKey<Single>.CopyFrom(BlackboardKey) BlackboardKey<Single>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class FloatKey : BlackboardKey<float>"
  },
  "api/BT.Core.GameObjectKey.html": {
    "href": "api/BT.Core.GameObjectKey.html",
    "title": "Class GameObjectKey | Developer Reference",
    "keywords": "Class GameObjectKey Inheritance Object BlackboardKey BlackboardKey < GameObject > GameObjectKey Inherited Members BlackboardKey<GameObject>.Value BlackboardKey<GameObject>.ToString() BlackboardKey<GameObject>.CopyFrom(BlackboardKey) BlackboardKey<GameObject>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class GameObjectKey : BlackboardKey<GameObject>"
  },
  "api/BT.Core.GradientKey.html": {
    "href": "api/BT.Core.GradientKey.html",
    "title": "Class GradientKey | Developer Reference",
    "keywords": "Class GradientKey Inheritance Object BlackboardKey BlackboardKey < Gradient > GradientKey Inherited Members BlackboardKey<Gradient>.Value BlackboardKey<Gradient>.ToString() BlackboardKey<Gradient>.CopyFrom(BlackboardKey) BlackboardKey<Gradient>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class GradientKey : BlackboardKey<Gradient>"
  },
  "api/BT.Core.html": {
    "href": "api/BT.Core.html",
    "title": "Namespace BT.Core | Developer Reference",
    "keywords": "Namespace BT.Core Classes BehaviorNode 모든 BehaviorNode의 Base class. BehaviorTreeSO BehaviorTreeSO 와 BehaviorNode 들을 관리하는 ScriptableObject. Blackboard BehaviorTree에서 사용할 Blackboard BlackboardKey BlackboardKey<T> BlackboardKeyValuePair BooleanKey BoundsIntKey BoundsKey ColliderKey ColorKey CurveKey DoubleKey FloatKey GameObjectKey GradientKey IntKey LayerKey LayerMaskKey MaterialKey NodeProperty NodeProperty<T> RigidBodyKey RootNode BehaviorTreeSO 의 시작 노드. StringKey TagKey TransformKey Vector2IntKey Vector2Key Vector3IntKey Vector3Key Vector4Key Enums BehaviorNodeState 노드의 상태를 표시해주는 Enum."
  },
  "api/BT.Core.IntKey.html": {
    "href": "api/BT.Core.IntKey.html",
    "title": "Class IntKey | Developer Reference",
    "keywords": "Class IntKey Inheritance Object BlackboardKey BlackboardKey < Int32 > IntKey Inherited Members BlackboardKey<Int32>.Value BlackboardKey<Int32>.ToString() BlackboardKey<Int32>.CopyFrom(BlackboardKey) BlackboardKey<Int32>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class IntKey : BlackboardKey<int>"
  },
  "api/BT.Core.LayerKey.html": {
    "href": "api/BT.Core.LayerKey.html",
    "title": "Class LayerKey | Developer Reference",
    "keywords": "Class LayerKey Inheritance Object BlackboardKey BlackboardKey < Int32 > LayerKey Inherited Members BlackboardKey<Int32>.Value BlackboardKey<Int32>.ToString() BlackboardKey<Int32>.CopyFrom(BlackboardKey) BlackboardKey<Int32>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class LayerKey : BlackboardKey<int>"
  },
  "api/BT.Core.LayerMaskKey.html": {
    "href": "api/BT.Core.LayerMaskKey.html",
    "title": "Class LayerMaskKey | Developer Reference",
    "keywords": "Class LayerMaskKey Inheritance Object BlackboardKey BlackboardKey < LayerMask > LayerMaskKey Inherited Members BlackboardKey<LayerMask>.Value BlackboardKey<LayerMask>.ToString() BlackboardKey<LayerMask>.CopyFrom(BlackboardKey) BlackboardKey<LayerMask>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class LayerMaskKey : BlackboardKey<LayerMask>"
  },
  "api/BT.Core.MaterialKey.html": {
    "href": "api/BT.Core.MaterialKey.html",
    "title": "Class MaterialKey | Developer Reference",
    "keywords": "Class MaterialKey Inheritance Object BlackboardKey BlackboardKey < Material > MaterialKey Inherited Members BlackboardKey<Material>.Value BlackboardKey<Material>.ToString() BlackboardKey<Material>.CopyFrom(BlackboardKey) BlackboardKey<Material>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class MaterialKey : BlackboardKey<Material>"
  },
  "api/BT.Core.NodeProperty.html": {
    "href": "api/BT.Core.NodeProperty.html",
    "title": "Class NodeProperty | Developer Reference",
    "keywords": "Class NodeProperty Inheritance Object NodeProperty NodeProperty<T> Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax public class NodeProperty Fields Reference Declaration public BlackboardKey Reference Field Value Type Description BlackboardKey"
  },
  "api/BT.Core.NodeProperty-1.html": {
    "href": "api/BT.Core.NodeProperty-1.html",
    "title": "Class NodeProperty<T> | Developer Reference",
    "keywords": "Class NodeProperty<T> Inheritance Object NodeProperty NodeProperty<T> Inherited Members NodeProperty.Reference Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax public class NodeProperty<T> : NodeProperty Type Parameters Name Description T Fields DefaultValue Declaration public T DefaultValue Field Value Type Description T Properties Value Declaration public T Value { get; set; } Property Value Type Description T"
  },
  "api/BT.Core.RigidBodyKey.html": {
    "href": "api/BT.Core.RigidBodyKey.html",
    "title": "Class RigidBodyKey | Developer Reference",
    "keywords": "Class RigidBodyKey Inheritance Object BlackboardKey BlackboardKey < Rigidbody > RigidBodyKey Inherited Members BlackboardKey<Rigidbody>.Value BlackboardKey<Rigidbody>.ToString() BlackboardKey<Rigidbody>.CopyFrom(BlackboardKey) BlackboardKey<Rigidbody>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class RigidBodyKey : BlackboardKey<Rigidbody>"
  },
  "api/BT.Core.RootNode.html": {
    "href": "api/BT.Core.RootNode.html",
    "title": "Class RootNode | Developer Reference",
    "keywords": "Class RootNode BehaviorTreeSO 의 시작 노드. Inheritance Object BehaviorNode RootNode Inherited Members BehaviorNode.Guid BehaviorNode.Position BehaviorNode._runner BehaviorNode.Blackboard BehaviorNode.Description BehaviorNode.State BehaviorNode.Initialize(BehaviorTreeRunner) BehaviorNode.Run() BehaviorNode.Abort() BehaviorNode.OnEnter() BehaviorNode.OnExit() BehaviorNode.IsRunnable() BehaviorNode.Reset() Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class RootNode : BehaviorNode Fields Child Declaration public BehaviorNode Child Field Value Type Description BehaviorNode Methods Awake() Declaration protected override void Awake() Overrides BehaviorNode.Awake() OnInitialize() Declaration protected override void OnInitialize() Overrides BehaviorNode.OnInitialize() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState Overrides BehaviorNode.OnRun()"
  },
  "api/BT.Core.StringKey.html": {
    "href": "api/BT.Core.StringKey.html",
    "title": "Class StringKey | Developer Reference",
    "keywords": "Class StringKey Inheritance Object BlackboardKey BlackboardKey < String > StringKey Inherited Members BlackboardKey<String>.Value BlackboardKey<String>.ToString() BlackboardKey<String>.CopyFrom(BlackboardKey) BlackboardKey<String>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class StringKey : BlackboardKey<string>"
  },
  "api/BT.Core.TagKey.html": {
    "href": "api/BT.Core.TagKey.html",
    "title": "Class TagKey | Developer Reference",
    "keywords": "Class TagKey Inheritance Object BlackboardKey BlackboardKey < String > TagKey Inherited Members BlackboardKey<String>.Value BlackboardKey<String>.ToString() BlackboardKey<String>.CopyFrom(BlackboardKey) BlackboardKey<String>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class TagKey : BlackboardKey<string>"
  },
  "api/BT.Core.TransformKey.html": {
    "href": "api/BT.Core.TransformKey.html",
    "title": "Class TransformKey | Developer Reference",
    "keywords": "Class TransformKey Inheritance Object BlackboardKey BlackboardKey < Transform > TransformKey Inherited Members BlackboardKey<Transform>.Value BlackboardKey<Transform>.ToString() BlackboardKey<Transform>.CopyFrom(BlackboardKey) BlackboardKey<Transform>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class TransformKey : BlackboardKey<Transform>"
  },
  "api/BT.Core.Vector2IntKey.html": {
    "href": "api/BT.Core.Vector2IntKey.html",
    "title": "Class Vector2IntKey | Developer Reference",
    "keywords": "Class Vector2IntKey Inheritance Object BlackboardKey BlackboardKey < Vector2Int > Vector2IntKey Inherited Members BlackboardKey<Vector2Int>.Value BlackboardKey<Vector2Int>.ToString() BlackboardKey<Vector2Int>.CopyFrom(BlackboardKey) BlackboardKey<Vector2Int>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class Vector2IntKey : BlackboardKey<Vector2Int>"
  },
  "api/BT.Core.Vector2Key.html": {
    "href": "api/BT.Core.Vector2Key.html",
    "title": "Class Vector2Key | Developer Reference",
    "keywords": "Class Vector2Key Inheritance Object BlackboardKey BlackboardKey < Vector2 > Vector2Key Inherited Members BlackboardKey<Vector2>.Value BlackboardKey<Vector2>.ToString() BlackboardKey<Vector2>.CopyFrom(BlackboardKey) BlackboardKey<Vector2>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class Vector2Key : BlackboardKey<Vector2>"
  },
  "api/BT.Core.Vector3IntKey.html": {
    "href": "api/BT.Core.Vector3IntKey.html",
    "title": "Class Vector3IntKey | Developer Reference",
    "keywords": "Class Vector3IntKey Inheritance Object BlackboardKey BlackboardKey < Vector3Int > Vector3IntKey Inherited Members BlackboardKey<Vector3Int>.Value BlackboardKey<Vector3Int>.ToString() BlackboardKey<Vector3Int>.CopyFrom(BlackboardKey) BlackboardKey<Vector3Int>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class Vector3IntKey : BlackboardKey<Vector3Int>"
  },
  "api/BT.Core.Vector3Key.html": {
    "href": "api/BT.Core.Vector3Key.html",
    "title": "Class Vector3Key | Developer Reference",
    "keywords": "Class Vector3Key Inheritance Object BlackboardKey BlackboardKey < Vector3 > Vector3Key Inherited Members BlackboardKey<Vector3>.Value BlackboardKey<Vector3>.ToString() BlackboardKey<Vector3>.CopyFrom(BlackboardKey) BlackboardKey<Vector3>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class Vector3Key : BlackboardKey<Vector3>"
  },
  "api/BT.Core.Vector4Key.html": {
    "href": "api/BT.Core.Vector4Key.html",
    "title": "Class Vector4Key | Developer Reference",
    "keywords": "Class Vector4Key Inheritance Object BlackboardKey BlackboardKey < Vector4 > Vector4Key Inherited Members BlackboardKey<Vector4>.Value BlackboardKey<Vector4>.ToString() BlackboardKey<Vector4>.CopyFrom(BlackboardKey) BlackboardKey<Vector4>.Equals(BlackboardKey) BlackboardKey.Name BlackboardKey.UnderlyingType BlackboardKey.TypeName BlackboardKey.OnBeforeSerialize() BlackboardKey.OnAfterDeserialize() BlackboardKey.CreateKey(Type) Namespace : BT.Core Assembly : cs.temp.dll.dll Syntax [Serializable] public class Vector4Key : BlackboardKey<Vector4>"
  },
  "api/BT.Editor.BehaviorTreeEditorWindow.BehaviourTreeEditorAssetModificationProcessor.html": {
    "href": "api/BT.Editor.BehaviorTreeEditorWindow.BehaviourTreeEditorAssetModificationProcessor.html",
    "title": "Class BehaviorTreeEditorWindow.BehaviourTreeEditorAssetModificationProcessor | Developer Reference",
    "keywords": "Class BehaviorTreeEditorWindow.BehaviourTreeEditorAssetModificationProcessor Inheritance Object BehaviorTreeEditorWindow.BehaviourTreeEditorAssetModificationProcessor Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class BehaviourTreeEditorAssetModificationProcessor : AssetModificationProcessor"
  },
  "api/BT.Editor.BehaviorTreeEditorWindow.html": {
    "href": "api/BT.Editor.BehaviorTreeEditorWindow.html",
    "title": "Class BehaviorTreeEditorWindow | Developer Reference",
    "keywords": "Class BehaviorTreeEditorWindow Inheritance Object BehaviorTreeEditorWindow Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class BehaviorTreeEditorWindow : EditorWindow Fields ActionNodeScriptTemplate Declaration public TextAsset ActionNodeScriptTemplate Field Value Type Description TextAsset BTStyle Declaration public StyleSheet BTStyle Field Value Type Description StyleSheet BTXml Declaration public VisualTreeAsset BTXml Field Value Type Description VisualTreeAsset CompositeNodeScriptTemplate Declaration public TextAsset CompositeNodeScriptTemplate Field Value Type Description TextAsset ConditionalNodeScriptTemplate Declaration public TextAsset ConditionalNodeScriptTemplate Field Value Type Description TextAsset DecoratorNodeScriptTemplate Declaration public TextAsset DecoratorNodeScriptTemplate Field Value Type Description TextAsset Instance Declaration public static BehaviorTreeEditorWindow Instance Field Value Type Description BehaviorTreeEditorWindow NodeXml Declaration public VisualTreeAsset NodeXml Field Value Type Description VisualTreeAsset PendingScriptCreation Declaration public BehaviorTreeEditorWindow.PendingScriptCreate PendingScriptCreation Field Value Type Description BehaviorTreeEditorWindow.PendingScriptCreate Serializer Declaration public SerializedBehaviourTree Serializer Field Value Type Description SerializedBehaviourTree Settings Declaration public BehaviorTreeProjectSettings Settings Field Value Type Description BehaviorTreeProjectSettings Tree Declaration public BehaviorTreeSO Tree Field Value Type Description BehaviorTreeSO Properties NewScriptDialog Declaration public NewScriptDialogView NewScriptDialog { get; } Property Value Type Description NewScriptDialogView TreeView Declaration public BehaviourTreeView TreeView { get; } Property Value Type Description BehaviourTreeView Methods CreateGUI() Editor 생성 Declaration public void CreateGUI() OnOpenAsset(Int32, Int32) Asset을 열었을 때의 CALLBACK함수. Declaration public static bool OnOpenAsset(int instanceId, int line) Parameters Type Name Description Int32 instanceId Int32 line Returns Type Description Boolean OpenWindow() Declaration public static void OpenWindow() OpenWindow(BehaviorTreeSO) Declaration public static void OpenWindow(BehaviorTreeSO tree) Parameters Type Name Description BehaviorTreeSO tree"
  },
  "api/BT.Editor.BehaviorTreeEditorWindow.PendingScriptCreate.html": {
    "href": "api/BT.Editor.BehaviorTreeEditorWindow.PendingScriptCreate.html",
    "title": "Class BehaviorTreeEditorWindow.PendingScriptCreate | Developer Reference",
    "keywords": "Class BehaviorTreeEditorWindow.PendingScriptCreate Inheritance Object BehaviorTreeEditorWindow.PendingScriptCreate Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class PendingScriptCreate Fields IsSourceParent Declaration public bool IsSourceParent Field Value Type Description Boolean NodePosition Declaration public Vector2 NodePosition Field Value Type Description Vector2 PendingCreate Declaration public bool PendingCreate Field Value Type Description Boolean ScriptName Declaration public string ScriptName Field Value Type Description String SourceGuid Declaration public string SourceGuid Field Value Type Description String Methods Reset() Declaration public void Reset()"
  },
  "api/BT.Editor.BehaviorTreeProjectSettings.html": {
    "href": "api/BT.Editor.BehaviorTreeProjectSettings.html",
    "title": "Class BehaviorTreeProjectSettings | Developer Reference",
    "keywords": "Class BehaviorTreeProjectSettings Inheritance Object BehaviorTreeProjectSettings Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class BehaviorTreeProjectSettings : ScriptableObject Fields ActionNodeScriptTemplate Declaration public TextAsset ActionNodeScriptTemplate Field Value Type Description TextAsset CompositeNodeScriptTemplate Declaration public TextAsset CompositeNodeScriptTemplate Field Value Type Description TextAsset ConditionalNodeScriptTemplate Declaration public TextAsset ConditionalNodeScriptTemplate Field Value Type Description TextAsset DecoratorNodeScriptTemplate Declaration public TextAsset DecoratorNodeScriptTemplate Field Value Type Description TextAsset NewNodePath Declaration public string NewNodePath Field Value Type Description String NewTreePath Declaration public string NewTreePath Field Value Type Description String"
  },
  "api/BT.Editor.BehaviorTreeRunnerEditor.html": {
    "href": "api/BT.Editor.BehaviorTreeRunnerEditor.html",
    "title": "Class BehaviorTreeRunnerEditor | Developer Reference",
    "keywords": "Class BehaviorTreeRunnerEditor Inheritance Object BehaviorTreeRunnerEditor Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class BehaviorTreeRunnerEditor : UnityEditor.Editor Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement"
  },
  "api/BT.Editor.BlackboardKeyPropertyDrawer.html": {
    "href": "api/BT.Editor.BlackboardKeyPropertyDrawer.html",
    "title": "Class BlackboardKeyPropertyDrawer | Developer Reference",
    "keywords": "Class BlackboardKeyPropertyDrawer Inheritance Object BlackboardKeyPropertyDrawer Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class BlackboardKeyPropertyDrawer : UnityEditor.PropertyDrawer Methods CreatePropertyGUI(SerializedProperty) Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description VisualElement"
  },
  "api/BT.Editor.BlackboardKeyValuePairPropertyDrawer.html": {
    "href": "api/BT.Editor.BlackboardKeyValuePairPropertyDrawer.html",
    "title": "Class BlackboardKeyValuePairPropertyDrawer | Developer Reference",
    "keywords": "Class BlackboardKeyValuePairPropertyDrawer Inheritance Object BlackboardKeyValuePairPropertyDrawer Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class BlackboardKeyValuePairPropertyDrawer : UnityEditor.PropertyDrawer Methods CreatePropertyGUI(SerializedProperty) Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description VisualElement"
  },
  "api/BT.Editor.CreateNodeWindow.html": {
    "href": "api/BT.Editor.CreateNodeWindow.html",
    "title": "Class CreateNodeWindow | Developer Reference",
    "keywords": "Class CreateNodeWindow Inheritance Object CreateNodeWindow Implements ISearchWindowProvider Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class CreateNodeWindow : ScriptableObject Methods CreateScript(BehaviorTreeEditorUtility.ScriptTemplate, SearchWindowContext) Declaration public void CreateScript(BehaviorTreeEditorUtility.ScriptTemplate scriptTemplate, SearchWindowContext context) Parameters Type Name Description BehaviorTreeEditorUtility.ScriptTemplate scriptTemplate SearchWindowContext context CreateSearchTree(SearchWindowContext) Declaration public List<SearchTreeEntry> CreateSearchTree(SearchWindowContext context) Parameters Type Name Description SearchWindowContext context Returns Type Description List < SearchTreeEntry > Initialize(BehaviourTreeView, NodeView, Boolean) Declaration public void Initialize(BehaviourTreeView treeView, NodeView source, bool isSourceParent) Parameters Type Name Description BehaviourTreeView treeView NodeView source Boolean isSourceParent OnSelectEntry(SearchTreeEntry, SearchWindowContext) Declaration public bool OnSelectEntry(SearchTreeEntry searchTreeEntry, SearchWindowContext context) Parameters Type Name Description SearchTreeEntry searchTreeEntry SearchWindowContext context Returns Type Description Boolean Show(Vector2, NodeView, Boolean) Declaration public static void Show(Vector2 mousePos, NodeView source, bool isSourceParent = false) Parameters Type Name Description Vector2 mousePos NodeView source Boolean isSourceParent Implements ISearchWindowProvider"
  },
  "api/BT.Editor.DoubleClickNode.html": {
    "href": "api/BT.Editor.DoubleClickNode.html",
    "title": "Class DoubleClickNode | Developer Reference",
    "keywords": "Class DoubleClickNode Inheritance Object DoubleClickNode Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class DoubleClickNode : MouseManipulator Constructors DoubleClickNode() Declaration public DoubleClickNode() Methods RegisterCallbacksOnTarget() Declaration protected override void RegisterCallbacksOnTarget() UnregisterCallbacksFromTarget() Declaration protected override void UnregisterCallbacksFromTarget()"
  },
  "api/BT.Editor.GenericNodePropertyPropertyDrawer.html": {
    "href": "api/BT.Editor.GenericNodePropertyPropertyDrawer.html",
    "title": "Class GenericNodePropertyPropertyDrawer | Developer Reference",
    "keywords": "Class GenericNodePropertyPropertyDrawer Inheritance Object GenericNodePropertyPropertyDrawer Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class GenericNodePropertyPropertyDrawer : UnityEditor.PropertyDrawer Methods CreatePropertyGUI(SerializedProperty) Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description VisualElement"
  },
  "api/BT.Editor.HierarchySelector.html": {
    "href": "api/BT.Editor.HierarchySelector.html",
    "title": "Class HierarchySelector | Developer Reference",
    "keywords": "Class HierarchySelector Inheritance Object HierarchySelector Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class HierarchySelector : MouseManipulator Methods RegisterCallbacksOnTarget() Declaration protected override void RegisterCallbacksOnTarget() UnregisterCallbacksFromTarget() Declaration protected override void UnregisterCallbacksFromTarget()"
  },
  "api/BT.Editor.html": {
    "href": "api/BT.Editor.html",
    "title": "Namespace BT.Editor | Developer Reference",
    "keywords": "Namespace BT.Editor Classes BehaviorTreeEditorWindow BehaviorTreeEditorWindow.BehaviourTreeEditorAssetModificationProcessor BehaviorTreeEditorWindow.PendingScriptCreate BehaviorTreeProjectSettings BehaviorTreeRunnerEditor BlackboardKeyPropertyDrawer BlackboardKeyValuePairPropertyDrawer CreateNodeWindow DoubleClickNode GenericNodePropertyPropertyDrawer HierarchySelector NodePropertyPropertyDrawer SerializedBehaviourTree"
  },
  "api/BT.Editor.NodePropertyPropertyDrawer.html": {
    "href": "api/BT.Editor.NodePropertyPropertyDrawer.html",
    "title": "Class NodePropertyPropertyDrawer | Developer Reference",
    "keywords": "Class NodePropertyPropertyDrawer Inheritance Object NodePropertyPropertyDrawer Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax public class NodePropertyPropertyDrawer : UnityEditor.PropertyDrawer Methods CreatePropertyGUI(SerializedProperty) Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description VisualElement"
  },
  "api/BT.Editor.SerializedBehaviourTree.html": {
    "href": "api/BT.Editor.SerializedBehaviourTree.html",
    "title": "Class SerializedBehaviourTree | Developer Reference",
    "keywords": "Class SerializedBehaviourTree Inheritance Object SerializedBehaviourTree Namespace : BT.Editor Assembly : cs.temp.dll.dll Syntax [Serializable] public class SerializedBehaviourTree Constructors SerializedBehaviourTree(BehaviorTreeSO) Declaration public SerializedBehaviourTree(BehaviorTreeSO tree) Parameters Type Name Description BehaviorTreeSO tree Fields SerializedObject Declaration public SerializedObject SerializedObject Field Value Type Description SerializedObject Tree Declaration public BehaviorTreeSO Tree Field Value Type Description BehaviorTreeSO Properties BlackboardKeys Declaration public SerializedProperty BlackboardKeys { get; } Property Value Type Description SerializedProperty BlackboardProperty Declaration public SerializedProperty BlackboardProperty { get; } Property Value Type Description SerializedProperty Nodes Declaration public SerializedProperty Nodes { get; } Property Value Type Description SerializedProperty RootNode Declaration public SerializedProperty RootNode { get; } Property Value Type Description SerializedProperty Methods AddChild(BehaviorNode, BehaviorNode) Declaration public void AddChild(BehaviorNode parent, BehaviorNode child) Parameters Type Name Description BehaviorNode parent BehaviorNode child ApplyChanges() Declaration public void ApplyChanges() BeginBatch() Declaration public void BeginBatch() CreateBlackboardKey(String, Type) Declaration public void CreateBlackboardKey(string keyName, Type keyType) Parameters Type Name Description String keyName Type keyType CreateNode(Type, Vector2) Declaration public BehaviorNode CreateNode(Type type, Vector2 pos) Parameters Type Name Description Type type Vector2 pos Returns Type Description BehaviorNode CreateNodeInstance(Type) Declaration public BehaviorNode CreateNodeInstance(Type type) Parameters Type Name Description Type type Returns Type Description BehaviorNode DeleteBlackboardKey(String) Declaration public void DeleteBlackboardKey(string keyName) Parameters Type Name Description String keyName DeleteNode(BehaviorNode) Declaration public void DeleteNode(BehaviorNode node) Parameters Type Name Description BehaviorNode node EndBatch() Declaration public void EndBatch() FindNode(SerializedProperty, BehaviorNode) Declaration public SerializedProperty FindNode(SerializedProperty array, BehaviorNode node) Parameters Type Name Description SerializedProperty array BehaviorNode node Returns Type Description SerializedProperty RemoveChild(BehaviorNode, BehaviorNode) Declaration public void RemoveChild(BehaviorNode parent, BehaviorNode child) Parameters Type Name Description BehaviorNode parent BehaviorNode child RemoveNodeArrayElement(SerializedProperty, BehaviorNode) Declaration public void RemoveNodeArrayElement(SerializedProperty array, BehaviorNode node) Parameters Type Name Description SerializedProperty array BehaviorNode node SetNodePosition(BehaviorNode, Vector2) Declaration public void SetNodePosition(BehaviorNode node, Vector2 pos) Parameters Type Name Description BehaviorNode node Vector2 pos SetRootNode(RootNode) Declaration public void SetRootNode(RootNode node) Parameters Type Name Description RootNode node SetViewTransform(Vector3, Vector3) Declaration public void SetViewTransform(Vector3 position, Vector3 scale) Parameters Type Name Description Vector3 position Vector3 scale"
  },
  "api/BT.Editor.Utilities.BehaviorTreeEditorUtility.html": {
    "href": "api/BT.Editor.Utilities.BehaviorTreeEditorUtility.html",
    "title": "Class BehaviorTreeEditorUtility | Developer Reference",
    "keywords": "Class BehaviorTreeEditorUtility Inheritance Object BehaviorTreeEditorUtility Namespace : BT.Editor.Utilities Assembly : cs.temp.dll.dll Syntax public static class BehaviorTreeEditorUtility Methods CreateNewScript(BehaviorTreeEditorUtility.ScriptTemplate, NodeView, Boolean, Vector2) Declaration public static void CreateNewScript(BehaviorTreeEditorUtility.ScriptTemplate template, NodeView source, bool isSourceParent, Vector2 pos) Parameters Type Name Description BehaviorTreeEditorUtility.ScriptTemplate template NodeView source Boolean isSourceParent Vector2 pos CreateNewTree(String, String) Declaration public static BehaviorTreeSO CreateNewTree(string assetName, string folder) Parameters Type Name Description String assetName String folder Returns Type Description BehaviorTreeSO"
  },
  "api/BT.Editor.Utilities.BehaviorTreeEditorUtility.ScriptTemplate.html": {
    "href": "api/BT.Editor.Utilities.BehaviorTreeEditorUtility.ScriptTemplate.html",
    "title": "Struct BehaviorTreeEditorUtility.ScriptTemplate | Developer Reference",
    "keywords": "Struct BehaviorTreeEditorUtility.ScriptTemplate Namespace : BT.Editor.Utilities Assembly : cs.temp.dll.dll Syntax public struct ScriptTemplate Fields DefaultFileName Declaration public string DefaultFileName Field Value Type Description String SubFolder Declaration public string SubFolder Field Value Type Description String TemplateFile Declaration public TextAsset TemplateFile Field Value Type Description TextAsset"
  },
  "api/BT.Editor.Utilities.html": {
    "href": "api/BT.Editor.Utilities.html",
    "title": "Namespace BT.Editor.Utilities | Developer Reference",
    "keywords": "Namespace BT.Editor.Utilities Classes BehaviorTreeEditorUtility Structs BehaviorTreeEditorUtility.ScriptTemplate"
  },
  "api/BT.Editor.Views.BehaviourTreeView.html": {
    "href": "api/BT.Editor.Views.BehaviourTreeView.html",
    "title": "Class BehaviourTreeView | Developer Reference",
    "keywords": "Class BehaviourTreeView Inheritance Object BehaviourTreeView Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class BehaviourTreeView : GraphView Constructors BehaviourTreeView() Declaration public BehaviourTreeView() Fields GridSnapSize Declaration public static int GridSnapSize Field Value Type Description Int32 OnNodeSelected Declaration public Action<NodeView> OnNodeSelected Field Value Type Description Action < NodeView > Properties canCopySelection Declaration protected override bool canCopySelection { get; } Property Value Type Description Boolean canCutSelection Declaration protected override bool canCutSelection { get; } Property Value Type Description Boolean canDeleteSelection Declaration protected override bool canDeleteSelection { get; } Property Value Type Description Boolean canDuplicateSelection Declaration protected override bool canDuplicateSelection { get; } Property Value Type Description Boolean canPaste Declaration protected override bool canPaste { get; } Property Value Type Description Boolean Methods AddChild(NodeView, NodeView) Declaration public void AddChild(NodeView parentView, NodeView childView) Parameters Type Name Description NodeView parentView NodeView childView BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt ClearView() Declaration public void ClearView() CreateNode(Type, Vector2, NodeView) Declaration public NodeView CreateNode(Type type, Vector2 pos, NodeView parentView) Parameters Type Name Description Type type Vector2 pos NodeView parentView Returns Type Description NodeView CreateNodeWithChild(Type, Vector2, NodeView) Declaration public NodeView CreateNodeWithChild(Type type, Vector2 pos, NodeView childView) Parameters Type Name Description Type type Vector2 pos NodeView childView Returns Type Description NodeView FindNodeView(BehaviorNode) Declaration public NodeView FindNodeView(BehaviorNode node) Parameters Type Name Description BehaviorNode node Returns Type Description NodeView FindNodeView(String) Declaration public NodeView FindNodeView(string guid) Parameters Type Name Description String guid Returns Type Description NodeView GetCompatiblePorts(Port, NodeAdapter) Declaration public override List<Port> GetCompatiblePorts(Port startPort, NodeAdapter nodeAdapter) Parameters Type Name Description Port startPort NodeAdapter nodeAdapter Returns Type Description List < Port > PopulateView(SerializedBehaviourTree) BehaviorTreeSO를 이용해서 View를 재구성함. Declaration public void PopulateView(SerializedBehaviourTree bt) Parameters Type Name Description SerializedBehaviourTree bt View를 구성하기 위한 BehaviorTree RemoveElements(IEnumerable<GraphElement>) Declaration public void RemoveElements(IEnumerable<GraphElement> elementsToRemove) Parameters Type Name Description IEnumerable < GraphElement > elementsToRemove SelectNode(NodeView) Declaration public void SelectNode(NodeView view) Parameters Type Name Description NodeView view UpdateNodeStates() Declaration public void UpdateNodeStates()"
  },
  "api/BT.Editor.Views.BehaviourTreeView.UxmlFactory.html": {
    "href": "api/BT.Editor.Views.BehaviourTreeView.UxmlFactory.html",
    "title": "Class BehaviourTreeView.UxmlFactory | Developer Reference",
    "keywords": "Class BehaviourTreeView.UxmlFactory Inheritance Object BehaviourTreeView.UxmlFactory Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class UxmlFactory : BehaviourTreeView.UxmlFactory<BehaviourTreeView, GraphView.UxmlTraits>"
  },
  "api/BT.Editor.Views.BlackboardView.html": {
    "href": "api/BT.Editor.Views.BlackboardView.html",
    "title": "Class BlackboardView | Developer Reference",
    "keywords": "Class BlackboardView Inheritance Object BlackboardView Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class BlackboardView : VisualElement Methods ClearView() Declaration public void ClearView()"
  },
  "api/BT.Editor.Views.BlackboardView.UxmlFactory.html": {
    "href": "api/BT.Editor.Views.BlackboardView.UxmlFactory.html",
    "title": "Class BlackboardView.UxmlFactory | Developer Reference",
    "keywords": "Class BlackboardView.UxmlFactory Inheritance Object BlackboardView.UxmlFactory Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class UxmlFactory : BlackboardView.UxmlFactory<BlackboardView, VisualElement.UxmlTraits>"
  },
  "api/BT.Editor.Views.html": {
    "href": "api/BT.Editor.Views.html",
    "title": "Namespace BT.Editor.Views | Developer Reference",
    "keywords": "Namespace BT.Editor.Views Classes BehaviourTreeView BehaviourTreeView.UxmlFactory BlackboardView BlackboardView.UxmlFactory InspectorView 의 Inspector창을 표시하기위한 View InspectorView.UxmlFactory NewScriptDialogView NewScriptDialogView.UxmlFactory NodePort NodeView Node를 GraphView에서 표시하기위한 View. OverlayView OverlayView.UxmlFactory SplitView SplitView.UxmlFactory"
  },
  "api/BT.Editor.Views.InspectorView.html": {
    "href": "api/BT.Editor.Views.InspectorView.html",
    "title": "Class InspectorView | Developer Reference",
    "keywords": "Class InspectorView 의 Inspector창을 표시하기위한 View Inheritance Object InspectorView Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class InspectorView : VisualElement Constructors InspectorView() Declaration public InspectorView()"
  },
  "api/BT.Editor.Views.InspectorView.UxmlFactory.html": {
    "href": "api/BT.Editor.Views.InspectorView.UxmlFactory.html",
    "title": "Class InspectorView.UxmlFactory | Developer Reference",
    "keywords": "Class InspectorView.UxmlFactory Inheritance Object InspectorView.UxmlFactory Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class UxmlFactory : InspectorView.UxmlFactory<InspectorView, VisualElement.UxmlTraits>"
  },
  "api/BT.Editor.Views.NewScriptDialogView.html": {
    "href": "api/BT.Editor.Views.NewScriptDialogView.html",
    "title": "Class NewScriptDialogView | Developer Reference",
    "keywords": "Class NewScriptDialogView Inheritance Object NewScriptDialogView Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class NewScriptDialogView : VisualElement Methods CreateScript(BehaviorTreeEditorUtility.ScriptTemplate, NodeView, Boolean, Vector2) Declaration public void CreateScript(BehaviorTreeEditorUtility.ScriptTemplate template, NodeView source, bool isSourceParent, Vector2 nodePos) Parameters Type Name Description BehaviorTreeEditorUtility.ScriptTemplate template NodeView source Boolean isSourceParent Vector2 nodePos"
  },
  "api/BT.Editor.Views.NewScriptDialogView.UxmlFactory.html": {
    "href": "api/BT.Editor.Views.NewScriptDialogView.UxmlFactory.html",
    "title": "Class NewScriptDialogView.UxmlFactory | Developer Reference",
    "keywords": "Class NewScriptDialogView.UxmlFactory Inheritance Object NewScriptDialogView.UxmlFactory Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class UxmlFactory : NewScriptDialogView.UxmlFactory<NewScriptDialogView, UxmlTraits>"
  },
  "api/BT.Editor.Views.NodePort.html": {
    "href": "api/BT.Editor.Views.NodePort.html",
    "title": "Class NodePort | Developer Reference",
    "keywords": "Class NodePort Inheritance Object NodePort Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class NodePort : Port Constructors NodePort(Direction, Capacity) Declaration protected NodePort(Direction portDirection, Capacity portCapacity) Parameters Type Name Description Direction portDirection Capacity portCapacity Methods ContainsPoint(Vector2) Declaration public override bool ContainsPoint(Vector2 localPoint) Parameters Type Name Description Vector2 localPoint Returns Type Description Boolean"
  },
  "api/BT.Editor.Views.NodeView.html": {
    "href": "api/BT.Editor.Views.NodeView.html",
    "title": "Class NodeView | Developer Reference",
    "keywords": "Class NodeView Node를 GraphView에서 표시하기위한 View. Inheritance Object NodeView Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class NodeView : Node Constructors NodeView(BehaviorNode, VisualTreeAsset) Declaration public NodeView(BehaviorNode node, VisualTreeAsset nodeXml) Parameters Type Name Description BehaviorNode node VisualTreeAsset nodeXml Fields InputPort Declaration public Port InputPort Field Value Type Description Port Node Declaration public readonly BehaviorNode Node Field Value Type Description BehaviorNode OnNodeSelected Declaration public Action<NodeView> OnNodeSelected Field Value Type Description Action < NodeView > OutputPort Declaration public Port OutputPort Field Value Type Description Port Properties ChildrenNode Declaration public List<NodeView> ChildrenNode { get; } Property Value Type Description List < NodeView > ParentNode Declaration public NodeView ParentNode { get; } Property Value Type Description NodeView Methods OnSelected() Declaration public override void OnSelected() SetPosition(Rect) Declaration public override void SetPosition(Rect newPos) Parameters Type Name Description Rect newPos SetupDataBinding() Declaration public void SetupDataBinding() SortChildren() NodeView의 x좌표에 따라 sort함. Declaration public void SortChildren() UpdateState() Node의 현 상태에 따라 표시를 하기 위해 Class를 추가함. Declaration public void UpdateState()"
  },
  "api/BT.Editor.Views.OverlayView.html": {
    "href": "api/BT.Editor.Views.OverlayView.html",
    "title": "Class OverlayView | Developer Reference",
    "keywords": "Class OverlayView Inheritance Object OverlayView Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class OverlayView : VisualElement Fields OnTreeSelected Declaration public Action<BehaviorTreeSO> OnTreeSelected Field Value Type Description Action < BehaviorTreeSO > Methods Hide() Declaration public void Hide() Show() Declaration public void Show() ToAssetFormat(String) Declaration public string ToAssetFormat(string str) Parameters Type Name Description String str Returns Type Description String ToMenuFormat(String) Declaration public string ToMenuFormat(string str) Parameters Type Name Description String str Returns Type Description String"
  },
  "api/BT.Editor.Views.OverlayView.UxmlFactory.html": {
    "href": "api/BT.Editor.Views.OverlayView.UxmlFactory.html",
    "title": "Class OverlayView.UxmlFactory | Developer Reference",
    "keywords": "Class OverlayView.UxmlFactory Inheritance Object OverlayView.UxmlFactory Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class UxmlFactory : OverlayView.UxmlFactory<OverlayView, UxmlTraits>"
  },
  "api/BT.Editor.Views.SplitView.html": {
    "href": "api/BT.Editor.Views.SplitView.html",
    "title": "Class SplitView | Developer Reference",
    "keywords": "Class SplitView Inheritance Object SplitView Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class SplitView : TwoPaneSplitView"
  },
  "api/BT.Editor.Views.SplitView.UxmlFactory.html": {
    "href": "api/BT.Editor.Views.SplitView.UxmlFactory.html",
    "title": "Class SplitView.UxmlFactory | Developer Reference",
    "keywords": "Class SplitView.UxmlFactory Inheritance Object SplitView.UxmlFactory Namespace : BT.Editor.Views Assembly : cs.temp.dll.dll Syntax public class UxmlFactory : SplitView.UxmlFactory<SplitView, TwoPaneSplitView.UxmlTraits>"
  },
  "api/BT.html": {
    "href": "api/BT.html",
    "title": "Namespace BT | Developer Reference",
    "keywords": "Namespace BT Classes BehaviorTreeRunner Behavior Tree를 실행시키는 Component."
  },
  "api/BT.Nodes.Actions.html": {
    "href": "api/BT.Nodes.Actions.html",
    "title": "Namespace BT.Nodes.Actions | Developer Reference",
    "keywords": "Namespace BT.Nodes.Actions Classes PlayAnimationNode"
  },
  "api/BT.Nodes.Actions.PlayAnimationNode.html": {
    "href": "api/BT.Nodes.Actions.PlayAnimationNode.html",
    "title": "Class PlayAnimationNode | Developer Reference",
    "keywords": "Class PlayAnimationNode Inheritance Object PlayAnimationNode Namespace : BT.Nodes.Actions Assembly : cs.temp.dll.dll Syntax [Serializable] public class PlayAnimationNode : ActionNode Methods OnEnter() Declaration protected override void OnEnter() OnRun() Declaration protected override BehaviorNodeState OnRun() Returns Type Description BehaviorNodeState"
  },
  "api/BT.Nodes.Conditionals.html": {
    "href": "api/BT.Nodes.Conditionals.html",
    "title": "Namespace BT.Nodes.Conditionals | Developer Reference",
    "keywords": "Namespace BT.Nodes.Conditionals Classes IsAnimatorPlayingNode"
  },
  "api/BT.Nodes.Conditionals.IsAnimatorPlayingNode.html": {
    "href": "api/BT.Nodes.Conditionals.IsAnimatorPlayingNode.html",
    "title": "Class IsAnimatorPlayingNode | Developer Reference",
    "keywords": "Class IsAnimatorPlayingNode Inheritance Object IsAnimatorPlayingNode Namespace : BT.Nodes.Conditionals Assembly : cs.temp.dll.dll Syntax public class IsAnimatorPlayingNode : ConditionalNode Methods Condition() Declaration protected override bool Condition() Returns Type Description Boolean OnEnter() Declaration protected override void OnEnter()"
  },
  "api/BT.Nodes.html": {
    "href": "api/BT.Nodes.html",
    "title": "Namespace BT.Nodes | Developer Reference",
    "keywords": "Namespace BT.Nodes Classes ProjectileWeaponKey"
  },
  "api/BT.Nodes.ProjectileWeaponKey.html": {
    "href": "api/BT.Nodes.ProjectileWeaponKey.html",
    "title": "Class ProjectileWeaponKey | Developer Reference",
    "keywords": "Class ProjectileWeaponKey Inheritance Object ProjectileWeaponKey Namespace : BT.Nodes Assembly : cs.temp.dll.dll Syntax [Serializable] public class ProjectileWeaponKey : BlackboardKey<ProjectileWeapon>"
  },
  "api/BT.Utilities.Helpers.DictionaryHelper.html": {
    "href": "api/BT.Utilities.Helpers.DictionaryHelper.html",
    "title": "Class DictionaryHelper | Developer Reference",
    "keywords": "Class DictionaryHelper Inheritance Object DictionaryHelper Namespace : BT.Utilities.Helpers Assembly : cs.temp.dll.dll Syntax public static class DictionaryHelper Methods CloneDictionaryOnlyValues<TKey, TValue>(Dictionary<TKey, TValue>) Declaration public static Dictionary<TKey, TValue> CloneDictionaryOnlyValues<TKey, TValue>(Dictionary<TKey, TValue> original) where TValue : ICloneable Parameters Type Name Description Dictionary <TKey, TValue> original Returns Type Description Dictionary <TKey, TValue> Type Parameters Name Description TKey TValue"
  },
  "api/BT.Utilities.Helpers.html": {
    "href": "api/BT.Utilities.Helpers.html",
    "title": "Namespace BT.Utilities.Helpers | Developer Reference",
    "keywords": "Namespace BT.Utilities.Helpers Classes DictionaryHelper ObjectCopier"
  },
  "api/BT.Utilities.Helpers.ObjectCopier.html": {
    "href": "api/BT.Utilities.Helpers.ObjectCopier.html",
    "title": "Class ObjectCopier | Developer Reference",
    "keywords": "Class ObjectCopier Inheritance Object ObjectCopier Namespace : BT.Utilities.Helpers Assembly : cs.temp.dll.dll Syntax public class ObjectCopier Methods Clone<T>(T) Declaration public static T Clone<T>(T source) Parameters Type Name Description T source Returns Type Description T Type Parameters Name Description T"
  },
  "api/StormHawks.Runtime.Configs.Transforms.html": {
    "href": "api/StormHawks.Runtime.Configs.Transforms.html",
    "title": "Namespace StormHawks.Runtime.Configs.Transforms | Developer Reference",
    "keywords": "Namespace StormHawks.Runtime.Configs.Transforms Classes TransformOffsetConfig Interfaces ITransformOffset"
  },
  "api/StormHawks.Runtime.Configs.Transforms.ITransformOffset.html": {
    "href": "api/StormHawks.Runtime.Configs.Transforms.ITransformOffset.html",
    "title": "Interface ITransformOffset | Developer Reference",
    "keywords": "Interface ITransformOffset Namespace : StormHawks.Runtime.Configs.Transforms Assembly : cs.temp.dll.dll Syntax public interface ITransformOffset Properties PositionOffset Declaration Vector3 PositionOffset { get; } Property Value Type Description Vector3 RotationOffset Declaration Vector3 RotationOffset { get; } Property Value Type Description Vector3"
  },
  "api/StormHawks.Runtime.Configs.Transforms.TransformOffsetConfig.html": {
    "href": "api/StormHawks.Runtime.Configs.Transforms.TransformOffsetConfig.html",
    "title": "Class TransformOffsetConfig | Developer Reference",
    "keywords": "Class TransformOffsetConfig Inheritance Object TransformOffsetConfig Implements ITransformOffset Namespace : StormHawks.Runtime.Configs.Transforms Assembly : cs.temp.dll.dll Syntax public class TransformOffsetConfig : BaseConfigs, ITransformOffset Properties PositionOffset Declaration public Vector3 PositionOffset { get; set; } Property Value Type Description Vector3 RotationOffset Declaration public Vector3 RotationOffset { get; set; } Property Value Type Description Vector3 Implements ITransformOffset"
  },
  "index.html": {
    "href": "index.html",
    "title": "BehaviorTree | Developer Reference",
    "keywords": "BehaviorTree"
  },
  "manual/behaviorTree-management.html": {
    "href": "manual/behaviorTree-management.html",
    "title": "BehaviorTree Management | Developer Reference",
    "keywords": "BehaviorTree Management BehaviorTree(BT)를 관리(수정)하기 위한 문서입니다. BT는 무엇인지, 그리고 왜 사용하는지에 대한 정보 또한 얻을 수 있습니다. BehaviorTree란? BehaviorTree 란 게임에서 Behavior(행동) 을 Tree 구조로 만들어 AI의 행동을 관리(제어) 하는 것이다. 즉, BT는 Tree구조로 이루어져 있고, 그 Tree는 Node 를 저장하는 컨테이너로 볼 수 있다. Node란, 사용자가 정의할 수 있거나 이미 정의되어 있는 타입이 저장되어 있을 수 있다. BT에서는 행동이 Node로 저장되어 있다. BT는 Node 탐색을 DFS 순서에 따라 노드를 실행시킨다. BT에서는 Node를 방문시 무조건 그 Node를 실행시킨다. 그리고 반환값이 존재하며 실행시킨 Node에게서 반환값을 받는다. 그 반환값에 따라 우선순위 혹은 건너뛰기 등을 알거나 할 수 있다. 우리가 사용할 BT에서는 여러가지 Category로 Node들이 나뉘어져 있는데, Action, Decorator, Composite, Conditonal가 대표적이다. Node상태는 Invalid, Running, Success, Failure로 이루어져있다. Node를 실행시키게 된다면 앞의 Node상태를 반환값으로 받는다. Node 종류 Composite Sequence : 자식노드를 왼쪽에서부터 오른쪽으로 실행시킨다. 만약 자식노드가 Failure를 반환한다면, Composite노드 또한 Failure상태를 부모노드에게 반환한다. 모든 자식노드가 Success를 반환한다면 Success상태를 반환한다. 만약 하나의 자식노드라도 Running상태라면 부모노드에게 Running상태를 반환한다. Selector : 자식노드들을 왼쪽에서부터 오른쪽으로 탐색하며 실행시킨다. 만약 하나의 노드라도 Success를 반환 받는다면, 탐색을 중지하고 부모노드에게 Success를 반환한다. RandomSelector : 자식노드들의 순서와 상관없이 Random으로 자식노드를 실행시킨다. 만약 실행시킨 자식노드가 Success를 반환한다면 부모노드에게 Success를 반환한다. ... Decorator Repeat : 자식노드의 반환값에 관계없이 계속해서 자식노드를 실행시킨다. ... Conditional 미리 정의된 조건에 부합한다면, Success를 반환한다. 아니라면 Failure. Action BT가 코드를 실행시킨 뒤, AI가 특정 행동을 하도록 시키는 노드. Unity에서 BehaviorTree 활용하기 우리가 사용할 BT는 ScriptableObject(SO)로 제작되었으며, Node들 또한 SO 제작되었다. BehaviorTree 만들기 BehaviorTree Editor 사용법 이제 우리는 생성한 BT를 수정(편집)해기 위해서는 BT Editor를 열어야한다. 생성된 BT를 더블 클릭하면 Editor를 열 수 있다. 열린 BT Editor의 모습. 노드 관리 노드 생성 다른 노드를을 생성하기 위해서는 TreeView(Grid)쪽에서 오른쪽 마우스 클릭을 한 후, 생성하고 싶은 노드를 선택하면 생성할 수 있다. 노드 연결 예시로 만들어본 BT. Node들끼리 Edge를 통해서 연결 할 수 있다. (이때 부모 자식간의 관계가 설정된다.) 노드 정보 또한 Node를 선택하면 그 Node의 Inspector창이 열리는데, 그 때 그 노드에 관한 정보를 수정할 수 있다. BT 실행 BT Runner component 추가 이렇게 생성된 BT는 BehaviorTreeRunner 가 실행시킬 수 있다. 실행시킨 결과"
  },
  "manual/formatting-code.html": {
    "href": "manual/formatting-code.html",
    "title": "Formatting Code | Developer Reference",
    "keywords": "Formatting Code 저희는 dotnet/format 을 사용해서 코드를 관리합니다. 저희 repository에서 code format을 확인한 후, 그 결과가 approved 될 경우에만 main 브랜치에 머지가 됩니다. 위의 dotnet-format 을 사용하기 위해서는 먼저 설치를 해야합니다. 설치하는 방법은 아래와 같습니다. dotnet tool install -g dotnet-format --version 5.0.142902 --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json 그 이후 Unity에서 생성해준 .csproj 파일의 위치에서 아래의 명령을 입력하면 자동으로 code를 format해줍니다. dotnet-format ClearSkies.sln --fix-style warn 만약 위의 커맨드를 입력하고도, Code formatting 체크를 통과하지 못한다면 아래의 커맨드를 입력해보세요 :) dotnet format whitespace --folder --verbosity n"
  },
  "manual/test-manual.html": {
    "href": "manual/test-manual.html",
    "title": "Test Manual | Developer Reference",
    "keywords": "Test Manual"
  }
}